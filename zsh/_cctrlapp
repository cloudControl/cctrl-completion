#compdef cctrlapp

typeset -A opt_args

_arguments -C \
  '1:appDeploy:->appDeploy' \
  '2:cmds:->cmds' \
  '*:: :->args' \
&& ret=0

case "$state" in
  (appDeploy)
     local commands; commands=(
     '-l:list apps' \
     '-h:help' \
	 'APP_NAME:Application name' \
 	 'APP_NAME/default:Application name with default deployment' \
  	 'APP_NAME/DEP_NAME:Application name with branch deployment' 
     )

      _describe -t commands 'command' commands && ret=0
  ;;
  (cmds)
  	local appCommand; appCommand=(${(s./.)line[1]})
	  if [[ $#appCommand == 1 ]]; then
		local app_cmds; app_cmds=(
		  'create:create new application'
		  'delete:delete the application'
		  'details:application details'
          'addon.list:list all available addons'
          'user:list app users'
          'user.add:add user by email'
          'user.remove:remove user by username or email'
		  )
		_describe -t app_cmds 'app_cmds' app_cmds && ret=0
	  else
		local deployment_cmds; deployment_cmds=(
		'run:run command'
		'details:deployment details'
		'push:push local changes'
		'deploy:deploy version'
		'undeploy:delete deployment'
		'user:list app users'
		'user.add:add user by email'
		'user.remove:remove user by username or email'
		'addon:show addon'
		'addon.list:list all available addons'
		'addon.creds:print creds.json format to stdout'
		'addon.add:add addon'
		'addon.upgrade:upgrade addon'
		'addon.downgrade:downgrade addon'
		'addon.remove:remove addon'
		'alias:show alias'
		'alias.add:add alias'
		'alias.remove:remove alias'
		'worker:show worker'
		'worker.add:start worker'
		'worker.remove:stop worker'
		'cron:show cronjobs'
		'cron.add:add cronjob'
		'cron.remove:remove cronjob'
		'log:show the log'
		'open:open deployment on default browser'
		  )
		_describe -t deployment_cmds 'deployment_cmds' deployment_cmds && ret=0
	  
	  fi
  ;;
  (args)
    case $line[2] in
      (controller)
        _arguments \
          '-d:remove all generated files' \
          '-n:specify the application' \
          '-r:specify the root'
          ret=0
      ;;
      (mailer)
        local mailers; mailers=(
          '-a:creates a mailer for the specified subapp'
          '-d:removes all generated files'
          '-n:specify the application'
          '-r:specify the root destination path'
        )
        _describe -t mailers 'mailer' mailers && ret=0
      ;;
    esac
  ;;
esac

return 1